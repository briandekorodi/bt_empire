---
title: "deKorodi"
author: "Brian de Korodi"
format: html
editor: visual
---

```{r configuration}
#| message: false
library(ggplot2)
library(dplyr)
library(tidyr)
```

## Click [here](https://github.com/briandekorodi/bt_empire) to access the Github repository

### Question 2

```{r}
#| message: FALSE
here::i_am("bt_empire.Rproj")
```

```{r}
#| message: FALSE
library(vroom)
```

```{r}
#| message: FALSE
star_systems <- vroom("data/Data_systems.csv", locale = locale(grouping_mark = ".", decimal_mark = ",", encoding = "UTF-8"))
```

Rename the variables to remove spaces in their names.

```{r}
#| message: FALSE
library(data.table)
```

```{r}
setnames(star_systems, old = c('Distance From The Sun','EQUIVALENT TEMPERATURE','star mass', 'Relative Radius', 'Relative Luminosity', 'STAR TYPE'), 
         new = c('Distance_from_sun','Equivalent_temperature','Star_mass', 'Relative_radius', 'Relative_luminosity', 'Star_type'))
```

### Question 3

Number of observations and variables:

```{r}
nrow(star_systems) == 1040
ncol(star_systems) == 8
```

Checking numerical variables:

```{r}
class(star_systems$Star_idx) == "numeric"
class(star_systems$Distance_from_sun) == "numeric"
class(star_systems$Equivalent_temperature) == "numeric"
class(star_systems$Star_mass) == "numeric"
class(star_systems$Relative_radius) == "numeric"
class(star_systems$Relative_luminosity) == "numeric"
```

### Question 4

```{r}
basic_info <- star_systems |>
  summarise("Number of observations" = nrow(star_systems),
            "Number of variables" = ncol(star_systems),
            "Missing values" = across(everything(), ~sum(is.na(.))))
```

### Question 5

```{r}
star_systems |>
  filter(!is.na(Relative_radius)) |>
  filter(!is.na(Star_mass)) |>
  ggplot(aes(x = Relative_radius, y = Star_mass)) +
  geom_point() +
  geom_smooth() +
  labs(title = "Mass of a star as a function of its relative radius",
       x = "Relative radius",
       y = "Mass")
```

### Question 6

```{r}
Extreme_stars <- star_systems |>
  drop_na() |>
  select(where(is.numeric)) |>
  summarise("Star farthest from the sun" = max(Distance_from_sun),
            "Star closest to the sun" = min(Distance_from_sun),
            "Hottest star" = max(Equivalent_temperature),
            "Coldest star" = min(Equivalent_temperature),
            "Heaviest star" = max(Star_mass),
            "Lightest star" = min(Star_mass),
            "Widest star" = max(Relative_radius),
            "Least wide star" = min(Relative_radius),
            "Brightest star" = max(Relative_luminosity),
            "Least bright star" = min(Relative_luminosity))

knitr::kable(Extreme_stars)
```

### Question 7

Commit faction data sets to repository.

### Question 8

Load faction data set.

```{r}
#| message: FALSE
factions <- vroom("data/faction_list.csv", locale = locale(grouping_mark = ".", decimal_mark = ",", encoding = "UTF-8"))
```

Rename the variables to remove spaces.

```{r}
setnames(factions, old = c('Name Of The Faction','founding year','when ended'), 
         new = c('Faction_name','Founding_year','End_year'))
```

Load faction control data set.

```{r}
#| message: FALSE
faction_control <- vroom("data/system%control.csv", locale = locale(grouping_mark = ".", decimal_mark = ",", encoding = "UTF-8"))
```

### Question 9

```{r}
AIU_factions <- faction_control |>
  drop_na() |>
  summarise("Abandoned factions in 3040" = sum(faction_key == "A"),
            "Independent systems in 3040" = sum(faction_key == "I"),
            "Undiscovered systems in 3040" = sum(faction_key == "U"))

knitr::kable(AIU_factions)
```

### Question 10

Merge both data sets based on faction key.

```{r}
all_factions <- merge(factions, faction_control, by=c("faction_key"))
```

Compute missing values.

```{r}
sum(is.na(all_factions))
```
